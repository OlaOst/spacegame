# just a sound played at startup letting us know the game has started
startupDing.soundFile = test.wav
startupDing.name = startupDing

# backdrop picture
backdrop.drawsource = images/galaxiesbackdrop.jpg
backdrop.position = 0 0 -200
backdrop.radius = 100.0


# greeting text
greeting.text = Welcome!\nPage Up/Down zooms in/out\nArrow keys accelerates and rotates your ship\nX brakes, Z and C for strafing
greeting.position = -9 -5

# drag drop instruction text
#dragdrophelp.text = blabla
#dragdrophelp.position = 15 -7


# fps display is shown in a fixed position on the screen
fpsDisplay.text = here we should see fps
fpsDisplay.screenAbsolutePosition = true
fpsDisplay.position = -1.0 0.7
fpsDisplay.color = 1.0 1.0 1.0
fpsDisplay.name = FPS display

# special closest ship indicator points to closest ship entity
closestShip.screenAbsolutePosition = true
closestShip.position = 0.0 0.9
closestShip.name = Closest ship display
closestShip.color = 0.0 1.0 0.2
closestShip.text = ??


# the trashbin deletes modules that are dragged onto it
trashbin.name = trashbin
trashbin.position = -5 5
trashbin.drawsource = Unknown
trashbin.radius = 2.0


# playership controllable by player
#playership.source = playership.txt
playership.source = simpleship.txt
playership.leftEngine.control = playerEngine
playership.rightEngine.control = playerEngine
playership.leftGun.control = playerLauncher
playership.rightGun.control = playerLauncher
playership.leftGun.source = launcher.txt
playership.rightGun.source = launcher.txt
playership.*.collisionType = PlayerModule
playership.*.spawn.*.target = closestEnemy
playership.position = 0 0
playership.angle = 0
playership.name = playership
playership.keepInCenter = true

# npc ships shoot at the player
#npcship.source = npcship2.txt
npcship.source = simpleship.txt
npcship.*.collisionType = NpcModule
npcship.*.target = player
npcship.leftEngine.control = chaser
npcship.rightEngine.control = chaser
npcship.leftGun.control = aigunner
npcship.rightGun.control = aigunner
npcship.type = enemy ship
npcship.position = 25 25 to 50 50
#npcship.position = 5 5
npcship.angle = 0 to 360
npcship.spawnCount = 0


# blueprint modules create copies when dragged and serve as an unlimited supply of modules
engineBlueprint.source = engine.txt
engineBlueprint.isBlueprint = true
engineBlueprint.position = 5 5 0
engineBlueprint.name = engineBlueprint
#engineBlueprint.collisionType = PlayerModule

cannonBlueprint.source = cannon.txt
cannonBlueprint.isBlueprint = true
cannonBlueprint.position = 7 5 0
cannonBlueprint.name = cannonBlueprint
#cannonBlueprint.collisionType = PlayerModule

horizontalSkeletonBlueprint.source = horizontalskeleton.txt
horizontalSkeletonBlueprint.isBlueprint = true
horizontalSkeletonBlueprint.position = 9 5 0
horizontalSkeletonBlueprint.name = horizontalSkeletonBlueprint
#horizontalSkeletonBlueprint.collisionType = PlayerModule

verticalSkeletonBlueprint.source = verticalskeleton.txt
verticalSkeletonBlueprint.isBlueprint = true
verticalSkeletonBlueprint.position = 11 5 0
verticalSkeletonBlueprint.name = verticalSkeletonBlueprint
#verticalSkeletonBlueprint.collisionType = PlayerModule

launcherBlueprint.source = launcher.txt
launcherBlueprint.isBlueprint = true
launcherBlueprint.position = 13 5 0
launcherBlueprint.name = launcherBlueprint

# description text for blueprints
blueprinttext.text = These are blueprint modules\nCopies are created when you drag them
blueprinttext.position = 3 6

# junkfield with modules ready for the pickings
junkEngine.source = engine.txt
junkEngine.position = -20 -120 to 20 -100
junkEngine.angle = 0 to 360
junkEngine.spawnCount = 0

junkCannon.source = cannon.txt
junkCannon.position = -20 -120 to 20 -100
junkCannon.angle = 0 to 360
junkCannon.spawnCount = 0

junkHorizSkeleton.source = horizontalskeleton.txt
junkHorizSkeleton.position = -20 -120 to 20 -100
junkHorizSkeleton.angle = 0 to 360
junkHorizSkeleton.spawnCount = 0

junkVertSkeleton.source = verticalskeleton.txt
junkVertSkeleton.position = -20 -120 to 20 -100
junkVertSkeleton.angle = 0 to 360
junkVertSkeleton.spawnCount = 0